/* Encoding: UTF-8 (No BOM)  Notation (in 5th position):
     * Change, ! Fix, % Optimization, + Addition, - Removal, ; Comment
   Entries may not always be in chronological/commit order.
   See license at the end of file. */

2025-11-01 11:49 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/pmgr/hbpk-add.in
  * base/pmgr/hbpk-del.in
  * base/pmgr/hbpk-ls.in
    ! if [ -z ] not portable enough for macOS?
      it lacked else anyway...

  * .github/workflows/macos.yml
    ; test

2025-10-31 22:07 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * ubuntu-arm64.yml
  * windows.yml
  * ubuntu.yml
  * macos.yml
    * get grep from brew on macOS
    + verbose=no > $HOME/.wgetrc

2025-10-31 18:51 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/Makefile
  * common.mk
    * do we need to export PKGDEST=(?)

2025-10-31 17:43 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * common.mk
  * build/zig-binary/Makefile
    * on macOS machine name is arm64 not aarch64 here again

  * .github/workflows/macos.yml
    * /usr/bin/cat -> /bin/cat

2025-10-31 17:17 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + .github/workflows/macos.yml
    + added macos-latest runner
    
  * .github/workflows/ubuntu-arm64.yml
  * .github/workflows/ubuntu.yml
  * .github/workflows/windows.yml
    * fix path oops

2025-10-31 16:47 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/Makefile
  * base/pmgr/Makefile
  * base/xz-current/Makefile
  * base/xz-inherit/Makefile
  * base/xz/Makefile
  - base/GNU.txt
  + base/gnu.mk
  + base/via.mk
    * changed BSD Make bootstrap
      to use swappable via.mk

  * build/Makefile
    + PKGSELECTION="pkgname1 pkgname2 ..."
      to build specific packages

  * .github/workflows/ubuntu-arm64.yml
  * .github/workflows/ubuntu.yml
  * .github/workflows/windows.yml
    * changed to use PKGSELECTION=
    + add diffutils on win/MSYS2

  * common.mk
    ; final variables proposal

  * README
    + [extra]

2025-10-30 11:10 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * common.mk
  * build/zig-binary/Makefile
    * patch for macOS host
    ! don't overwrite HBPK_CC_FAMILY if it's already set
      (c&p typo)

2025-10-30 01:50 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * common.mk
    * indent

  * hbinfo.mk
    * supply .exe bin extension while locating hbmk2 on win

2025-10-30 00:19 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/GNU.txt
  * base/Makefile
    * self-modifying bootstrap BSD to GNU, only to activate
      missing feature of work dir override

  * base/pmgr/Makefile
  * base/xz-current/Makefile
  * base/xz-inherit/Makefile
  * base/xz/Makefile
    ! switch to boot.mk

  * build/libpq8/Makefile
  * build/libpq9/Makefile
    ! typo in path

2025-10-29 23:11 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + boot.mk
  * common.mk
  * base/Makefile
    * improve make compat in base stage, to bootstrap GNU
      Make eventually

  * build/harbour-core-onedir/Makefile
    * ignore symlink creation, Windows/MSYS2 @ GitHub Runner
      goes for issues

2025-10-29 18:00 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/Makefile
    + HBPK_BOOTSTRAP=yes allow 1st stage bootstrap using
      non GNU make(?)

  * base/xz-inherit/Makefile
    * shuffled pkg version number to 0

  * build/libpq8/Makefile
  * build/libpq9/Makefile
    * shuffled package names to libpq, major version
      number added to PKGVER - actually these can't coexist
      on system paths - header files will collide.
    * use $(HBPK_CC_FAMILY)

  * build/openssl/Makefile
  * build/zlib/Makefile
    * use $(HBPK_CC_FAMILY)

  * common.mk
    + set HBPK_CC_FAMILY = CC=clang when zig is detected

    + set HB_ZIG_TARGET={cpu}-windows-gnu when MSYS2 shell
      is detected 

  * hbinfo.mk
    + set HBPK_CC_FAMILY = CC=clang when zig is detected,
      this one uses information returned by hbmk2 --hbinfo

2025-10-29 13:39 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * libpq8/Makefile
  * libpq9/Makefile
    * tie to CC=clang
      later will be translated to $(HBPK_CC_FAMILY) macro of
      some sort

  * git -> interix-git
  * mkisofs -> interix-mkisofs
  * openssh -> interix-openssh
  * python  -> interix-python2
    * move out Interix ports to a namespace

  - base/xz-inherit/xz
    - binary was unneccesary here...

2025-10-29 12:55 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + base/xz-inherit/Makefile
  + base/xz-inherit/xz
    + added pseudo-package to satisfy xz dep in MSYS2 shell
      without building it. Seemed problematic to build
      from "unix tarball" with no patching.

  * base/pmgr/hbpk-extract.in
    + added support for .zip via unzip

  * build/zig-binary/Makefile
    ! avoid creating a symlink for zig on MSYS2/Windows,
      it ends up twice in tarball on this platform

  + build/zig-binary/zig
    + instead of a symlink, a bash-script wrapper is used,
      right now it also contains a hack mangling "zig rc"
      argument

  * build/zlib/Makefile
    * tie to "clang" compiler

2025-10-29 02:47 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + base/xz-current/Makefile
    + added upgradable xz (5.8.1) package, old one stay
      for older OS-es, new one is needed by aarch64

  * build/libpq8/Makefile
  * build/libpq9/Makefile
    * for convenience place libpq.a in Harbour's libpath

  + build/openssl/Makefile
    + static build OpenSSL 3.6.0 for testing

  * hbinfo.mk
    * gracefully check if hbmk2 is in /bin

  + .github/workflows/ubuntu-arm64.yml

2025-10-28 23:05 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * build/harbour-core-onedir/Makefile
  * build/harbour-pgsql/Makefile
  * build/letodbf-rdd-alcz/Makefile
  * build/letodbf-rdd-elch/Makefile
  * build/letodbf-server-alcz/Makefile
  * build/letodbf-server-elch/Makefile
  * common.mk
  * hbinfo.mk
    ! making a symlink to hbmk2 at /bin/hbmk2 wasn't a good idea,
      it messes library search when linking.
      resorted to "hbpk-ls harbour-core | grep /hbmk2$" to locate
      binary in installed harbour-core package flavour

2025-10-28 21:48 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + build/harbour-contribs/placeholder.txt
    + Harbour source tree will be symlinked or unpacked
      here if any on the contribs is build

  + build/harbour-pgsql/Makefile
    + experimenting on hbpgsql, sddpg inclusion,
      currently tied to libpq 9.6

  + hbinfo.mk
    + some JSON parsing in GNU Make

  * .github/workflows/ubuntu.yml
    ; will it build?

  * README
    + notes about HBPK_WORKDIR

  * base/pmgr/hbpk-add.in
  * base/pmgr/hbpk-del.in
  * base/pmgr/hbpk-ls.in
  * common.mk
    * HBPK_WORKDIR=$HOME/hbpk
      experimental support for relocating
      from /opt/hbpk or having multiple
      building trees

  * build/harbour-core-onedir/Makefile
  * build/harbour-core/Makefile
  * build/letodbf-rdd-alcz/Makefile
  * build/letodbf-rdd-elch/Makefile
  * build/libpq9/Makefile
    * many refinements, including getting platform, compiler
      info from hbmk2 --hbinfo

2025-10-27 19:52 UTC+0100 Aleksander Czajczynski (hb fki.pl)
 + build/letodbf-rdd-alcz/Makefile
 + build/letodbf-rdd-alcz/patch-00
 + build/letodbf-rdd-elch/Makefile
 + build/letodbf-rdd-elch/patch-00
 + build/letodbf-server-alcz/Makefile
 + build/letodbf-server-elch/Makefile
   + added LetoDBf related packages
   ; patch is related to <sys/select.h> having FD_SET
     in musl libc

 + hbarch.mk
   + common-ized HB_ZIG_TARGET to HB_CPU translation

 * build/harbour-core-onedir/Makefile
 * build/harbour-core/Makefile
   * moved dev suffix to PKGVER -> 3.2.0dev

 * pmgr.mk
   * one "sed" call later we can have conflicting names
     of SOURCES file downloads - use something@file.tar.gz,
     "something@" will end up in local storage, download
     request will be just for "file.tar.gz".

2025-10-27 12:24 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * README
    * .hbpk as package extension, plus a note

  * common.mk
    * set HB_ZIG_TARGET only if it's empty

2025-10-27 03:20 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + build/cmake/patch-00
    ! Cmake bootstrapped with make on Linux GPFs/crashes in
      Windows registry related routine. Where are we yet
      in this world?

  + build/harbour-core-onedir/Makefile
    + Harbour + contribs not needing external libraries:
      placed under single dir /opt/hbpk/harbour, built
      by Zig cc LLVM wrapper
      resulting package:
      harbour-core-3.2.0dev+zig+onedir.hbpk

  + build/harbour-core/Makefile
    + Harbour + contribs not needing any external libs:
      placed under /opt/hbpk prefix, binary under
      /opt/hbpk/bin, libs under ../lib, etc.
      built by Zig too
      resulting package:
      harbour-core-3.2.0dev+zig.hbpk

  * build/cmake/Makefile
    * tried different revision, due to bug described
      above - no luck. Needed our own patch.

  * build/zig-binary/Makefile
  * build/zig-binary/c++
  * build/zig-binary/cc
  * build/zig-binary/clang
  * build/zig-binary/clang++
  * build/zig-binary/cxx
    + compiler wrappers, added support for HB_ZIG_TARGET
      variable. Currently use to specify x86_64-linux-musl
      target, so the resulting binaries will work on
      any Linux distribution.

    ; this is the official Zig binary downloaded as is
      from ziglang.org
      repacked as:
      zig-0.15.2+officialbinary.hbpk

  * ../common.mk
    + use HB_ZIG_TARGET on Linux

  * ../pmgr.mk
    + $(PKGBLD) additional package flavour/description

2025-10-26 21:29 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + build/cmake/Makefile
  + build/zig-binary/Makefile
  + build/zig-binary/README.txt
    + added CMake 4.1.2 and Zig 0.15.2, would Zig be able to
      build CMake?

  + build/zig-binary/ar
  + build/zig-binary/c++
  + build/zig-binary/cc
  + build/zig-binary/clang
  + build/zig-binary/clang++
  + build/zig-binary/cxx
  + build/zig-binary/objcopy
  + build/zig-binary/rc
    + scripts that will redirect average C compiler usage to Zig

2025-10-26 18:59 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/pmgr/hbpk-add.in
  * base/pmgr/hbpk-extract.in
    * "binary" built packages now have *.hbpk suffix

  * base/pmgr/include/limits.h -> base/pmgr/include/limits.h.disable
    * temp(?) disable overriding of /usr/include/limits.h

2025-10-26 17:28 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  * base/pmgr/pmgr-add.in -> base/pmgr/hbpk-add.in
  * base/pmgr/pmgr-del.in -> base/pmgr/hbpk-del.in
  * base/pmgr/pmgr-extract.in -> base/pmgr/hbpk-extract.in
  * base/pmgr/pmgr-ls.in -> base/pmgr/hbpk-ls.in
  * build/arm-linux-gnueabi/runtime/Makefile
  * build/i386-pc-minix/runtime/Makefile
  * build/i686-mingw32/runtime/Makefile
  * build/i686-mingw32/w32api/Makefile
  * build/x86_64-mingw32/runtime/Makefile
  * common.mk
  * README
    * renamed CLI package manager files/calls from pmgr-* to hbpk-*

2025-10-26 16:49 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + build/libpq18/Makefile
  + build/libpq8/Makefile
  + build/libpq9/Makefile
    + added PostgreSQL libPQ client libs from version
      18.0, 9.6.24, 8.4.22
      TODO: 18.0 most likely needs ICU lib to be added

  + build/zlib/Makefile
    + zlib 1.3.1
      try to keep the same version as Harbour in-tree
      local hbzlib

  * ChangeLog.txt
    * wording

2025-10-26 12:12 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + mipsel-pe/binutils/patch-12
  + mipsel-pe/binutils/patch-13
  + mipsel-pe/binutils/patch-14
  + mipsel-pe/binutils/patch-15
  + mipsel-pe/gcc/patch-05
  + mipsel-pe/gcc/patch-06
  * mipsel-pe/binutils/Makefile
  * mipsel-pe/gcc/Makefile
    * experiment at building an older GCC flavor with newer toolchain,
      building old GCC 4.3.4 MIPS PE Win32 by moderately recent GCC 12.2.0
      from Debian 12 (tested)

2025-10-26 12:05 UTC+0100 Aleksander Czajczynski (hb fki.pl)
  + ChangeLog.txt
    ; initial commit of package manager - targeted at building C libraries
      (sometimes old versions of them), where rewriting specific Makefiles
      to hbmk2 is not viable

      public domain code from https://github.com/7shi/pmgrsrc
      Many thanks 7shi.
